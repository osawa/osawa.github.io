{"version":3,"sources":["webpack://gatsby-starter-blog/./src/components/bio.js","webpack://gatsby-starter-blog/./src/components/tags.js","webpack://gatsby-starter-blog/./src/pages/spell-odds.js"],"names":["data","useStaticQuery","author","site","siteMetadata","social","className","S","layout","formats","src","width","height","quality","alt","name","summary","href","twitter","props","tags","map","text","css","tagStyles","Link","to","value","v","odds","location","siteTitle","title","useState","castValue","scb","getOdds","Math","abs","getCastOdds","i","getUnbindOdds","parseInt","getNotUnbindOdds","toPercent","floor","type","min","max","id","onChange","e","target","inputStyles","thStyles","tdStyles","so","console","log"],"mappings":"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","file":"component---src-pages-spell-odds-js-342f2625e477cb961285.js","sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n  const social = data.site.siteMetadata?.social\n\n  return (\n    <div className=\"bio\">\n      <StaticImage\n        className=\"bio-avatar\"\n        layout=\"fixed\"\n        formats={[\"AUTO\", \"WEBP\", \"AVIF\"]}\n        src=\"../images/profile-pic.jpg\"\n        width={50}\n        height={50}\n        quality={95}\n        alt=\"Profile picture\"\n      />\n      {author?.name && (\n        <p>\n          Written by <strong>{author.name}</strong> {author?.summary || null}\n          {` `}\n          <br />\n          tw: \n          <a href={`https://twitter.com/${social?.twitter || ``}`}>\n            @{social?.twitter}\n          </a>\n        </p>\n      )}\n    </div>\n  )\n}\n\nexport default Bio\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport tw, { css } from 'twin.macro'\n\nconst Tags = (props) => {\n  const tags = props.data.map((text) => {\n    return (\n      <li css={tagStyles}>\n        {/* NOTE: リンク先をtextで指定してていいのか……そもそもテキストをtag名として登録してるからいいのか */}\n        <Link to={`tags/${text}`}>{text}</Link>\n      </li>\n    );\n  });\n\n  return (\n    <ul css={tw`space-x-4 ml-0`}>\n      {tags}\n    </ul>\n  );\n}\n\nexport default Tags\n\nconst tagStyles = css`\n  ${tw`inline-block m-0 px-2 py-1 border rounded text-sm list-none`}\n  border-color: var(--color-primary);\n`;\n","import React, { useState } from 'react';\nimport { Link, graphql } from \"gatsby\"\nimport tw, { css } from 'twin.macro'\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport Tags from \"../components/tags\"\n\nconst SpellOdds = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n\n  const [castValue, scb] = useState(6);\n  const setCastValue = (e) => scb(e.target.value);\n\n  const getOdds = (value = castValue) => {\n    return (0 - Math.abs(value - 7) + 6) / 36;\n  };\n\n  const getCastOdds = (value = castValue) => {\n    let v = value == 2 ? 3 : value; // 出目2はファンブルなので詠唱値3と同値扱い\n    let odds = 0;\n    return (() => {\n      for (let i = v; i < 13; i++) {\n        odds += getOdds(i);\n      }\n      return odds;\n    })();\n  };\n\n  const getUnbindOdds  = (value = castValue) => {\n    if (value >= 12) return 0;\n    const v = value == 2 ? 3 : value;\n    return getCastOdds(parseInt(v) + 1);\n  };\n\n  const getNotUnbindOdds = value => {\n    return 1 - getUnbindOdds(value);\n  }\n\n  const getFinallySuccessOdds = value => {\n    let v = value == 2 ? 3 : value; // 出目2はファンブルなので詠唱値3と同値扱い\n    let odds = 0;\n    return (() => {\n      for (let i = v; i < 13; i++) {\n        const so = getOdds(i) * getNotUnbindOdds(i);\n        odds += so;\n        console.log('getOdds: ' + getOdds(i));\n        console.log('getNotUnbindOdds: ' + getNotUnbindOdds(i));\n        console.log('so: ' + so);\n      }\n      return odds;\n    })();\n  }\n\n  const toPercent = value => {\n    return (Math.floor(value * 10000) / 100) + '%';\n  };\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <div css={tw`flex items-center justify-between`}>\n        <h1 css={tw`m-0`}>呪文確率計算機</h1>\n        <small>ver 0.1</small>\n      </div>\n      <div css={tw`flex space-x-4 items-center mt-8`}>\n        <div>詠唱値</div>\n        <input type=\"number\" min={2} max={12} name=\"\" id=\"\" onChange={setCastValue} css={inputStyles} value={castValue} />\n      </div>\n      <table css={tw`border mt-4`}>\n        <tr>\n          <th css={thStyles}>詠唱値</th>\n          <td css={tdStyles}>{castValue}</td>\n          <th css={thStyles}>打ち消し成功値</th>\n          <td css={tdStyles}>{parseInt(castValue)+ 1}</td>\n        </tr>\n        <tr>\n          <th css={thStyles}>詠唱成功率</th>\n          <td css={tdStyles}>{toPercent(getCastOdds(castValue))}</td>\n          <th css={thStyles}>打ち消し成功率</th>\n          <td css={tdStyles}>{toPercent(getUnbindOdds(castValue))}</td>\n        </tr>\n        <tr>\n          <th css={thStyles}>詠唱成功＆打ち消し失敗率</th>\n          <td css={tdStyles}>{toPercent(getFinallySuccessOdds(castValue))}</td>\n          <th css={thStyles}>打ち消し失敗率</th>\n          <td css={tdStyles}>{toPercent(getNotUnbindOdds(castValue))}</td>\n        </tr>\n      </table>\n      {/* <p>Odds: {getOdds()}</p>\n      <p>UnbindOdds: {getCastOdds(castValue + 1)}</p>\n      <p>NotUnbindOdds: {getNotUnbindOdds(castValue)}</p>\n      <p>FinallySuccessOdds: {toPercent(getFinallySuccessOdds(castValue))}</p> */}\n    </Layout>\n  )\n}\n\nexport default SpellOdds\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt(truncate: true)\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"YYYY-MM-DD\")\n          title\n          description\n          draft\n          tags\n        }\n      }\n    }\n  }\n`\n\nconst inputStyles = css`\n  ${tw`border p-2`}\n`;\n\nconst thStyles = css`\n  ${tw`border text-left p-2 w-1/4`}\n`;\n\nconst tdStyles = css`\n  ${tw`border text-left p-2 w-1/4`}\n`;\n"],"sourceRoot":""}