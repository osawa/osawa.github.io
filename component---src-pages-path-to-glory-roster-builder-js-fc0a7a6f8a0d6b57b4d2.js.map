{"version":3,"file":"component---src-pages-path-to-glory-roster-builder-js-fc0a7a6f8a0d6b57b4d2.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./node_modules/deepmerge/dist/cjs.js","webpack://gatsby-starter-blog/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://gatsby-starter-blog/./src/components/path-to-glory-roster-builder/Label.js","webpack://gatsby-starter-blog/./src/components/path-to-glory-roster-builder/TextField.js","webpack://gatsby-starter-blog/./src/components/path-to-glory-roster-builder/Section.js","webpack://gatsby-starter-blog/./src/components/path-to-glory-roster-builder/Tab.js","webpack://gatsby-starter-blog/./src/components/path-to-glory-roster-builder/ptgStateData.js","webpack://gatsby-starter-blog/./src/pages/path-to-glory-roster-builder.js"],"sourcesContent":["'use strict';\n\nvar isMergeableObject = function isMergeableObject(value) {\n  return isNonNullObject(value) && !isSpecial(value);\n};\n\nfunction isNonNullObject(value) {\n  return !!value && typeof value === 'object';\n}\n\nfunction isSpecial(value) {\n  var stringValue = Object.prototype.toString.call(value);\n  return stringValue === '[object RegExp]' || stringValue === '[object Date]' || isReactElement(value);\n} // see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\n\n\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n  return value.$$typeof === REACT_ELEMENT_TYPE;\n}\n\nfunction emptyTarget(val) {\n  return Array.isArray(val) ? [] : {};\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n  return options.clone !== false && options.isMergeableObject(value) ? deepmerge(emptyTarget(value), value, options) : value;\n}\n\nfunction defaultArrayMerge(target, source, options) {\n  return target.concat(source).map(function (element) {\n    return cloneUnlessOtherwiseSpecified(element, options);\n  });\n}\n\nfunction getMergeFunction(key, options) {\n  if (!options.customMerge) {\n    return deepmerge;\n  }\n\n  var customMerge = options.customMerge(key);\n  return typeof customMerge === 'function' ? customMerge : deepmerge;\n}\n\nfunction getEnumerableOwnPropertySymbols(target) {\n  return Object.getOwnPropertySymbols ? Object.getOwnPropertySymbols(target).filter(function (symbol) {\n    return target.propertyIsEnumerable(symbol);\n  }) : [];\n}\n\nfunction getKeys(target) {\n  return Object.keys(target).concat(getEnumerableOwnPropertySymbols(target));\n}\n\nfunction propertyIsOnObject(object, property) {\n  try {\n    return property in object;\n  } catch (_) {\n    return false;\n  }\n} // Protects from prototype poisoning and unexpected merging up the prototype chain.\n\n\nfunction propertyIsUnsafe(target, key) {\n  return propertyIsOnObject(target, key) // Properties are safe to merge if they don't exist in the target yet,\n  && !(Object.hasOwnProperty.call(target, key) // unsafe if they exist up the prototype chain,\n  && Object.propertyIsEnumerable.call(target, key)); // and also unsafe if they're nonenumerable.\n}\n\nfunction mergeObject(target, source, options) {\n  var destination = {};\n\n  if (options.isMergeableObject(target)) {\n    getKeys(target).forEach(function (key) {\n      destination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n    });\n  }\n\n  getKeys(source).forEach(function (key) {\n    if (propertyIsUnsafe(target, key)) {\n      return;\n    }\n\n    if (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {\n      destination[key] = getMergeFunction(key, options)(target[key], source[key], options);\n    } else {\n      destination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n    }\n  });\n  return destination;\n}\n\nfunction deepmerge(target, source, options) {\n  options = options || {};\n  options.arrayMerge = options.arrayMerge || defaultArrayMerge;\n  options.isMergeableObject = options.isMergeableObject || isMergeableObject; // cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()\n  // implementations can use it. The caller may not replace it.\n\n  options.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;\n  var sourceIsArray = Array.isArray(source);\n  var targetIsArray = Array.isArray(target);\n  var sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n  if (!sourceAndTargetTypesMatch) {\n    return cloneUnlessOtherwiseSpecified(source, options);\n  } else if (sourceIsArray) {\n    return options.arrayMerge(target, source, options);\n  } else {\n    return mergeObject(target, source, options);\n  }\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n  if (!Array.isArray(array)) {\n    throw new Error('first argument should be an array');\n  }\n\n  return array.reduce(function (prev, next) {\n    return deepmerge(prev, next, options);\n  }, {});\n};\n\nvar deepmerge_1 = deepmerge;\nmodule.exports = deepmerge_1;","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React, { useState } from 'react';\nimport tw, { css } from 'twin.macro'\n\nexport const Label = ({children, dark, ...props}) => {\n  return (\n    <div css={[labelStyles, dark ? tw`bg-green-500` : tw`bg-green-300`]} {...props}>{children}{dark}</div>\n  )\n}\n\nconst labelStyles = css`\n  ${tw`p-1 border-r text-sm leading-4 text-xs`}\n`;\n","import React, { useState, useContext } from 'react';\nimport tw, { css } from 'twin.macro'\nimport { PtgContext } from '../../pages/path-to-glory-roster-builder';\n\nimport { Label } from \"./Label\"\n\nexport const TextField = ({label, dark, name, onUpdate}) => {\n  const ptg = useContext(PtgContext);\n  console.log(name);\n  return (\n    <div tw=\"flex border-b\">\n      <Label tw=\"w-1/3\" dark={dark}>{label}</Label>\n      <div tw=\"w-2/3\">\n        <input type=\"text\" css={inputStyles} name={name} value={ptg} onChange={onUpdate} />\n      </div>\n    </div>\n  );\n};\n\nconst inputStyles = css`\n  ${tw`block px-1 w-full h-full text-xs`}\n`;\n","import React, { useState } from 'react';\nimport tw, { css } from 'twin.macro'\n\nexport const Section = ({children, label, ...props}) => {\n  return (\n    <section css={sectionStyles} {...props}>\n      {label && <div css={labelStyles}>{label}</div>}\n      <div css={bodyStyles}>{children}</div>\n    </section>\n  )\n}\n\nconst sectionStyles = css`\n  ${tw`px-2 pt-2 pb-4 bg-gray-100`}\n`;\n\nconst labelStyles = css`\n  ${tw`font-medium text-sm text-center`}\n`;\n\nconst bodyStyles = css`\n  ${tw`mt-2 border border-b-0`}\n`;\n","import React, { useState } from 'react';\nimport tw, { css } from 'twin.macro'\n\nexport const Tab = ({isPtgRoster, setIsPtgRoster}) => {\n  return (\n    <div tw=\"flex justify-between space-x-2 mt-2 px-4 border-b w-full\">\n      <div css={[tabStyles, isPtgRoster && activeTabStyles]} onClick={() => setIsPtgRoster(true)}>『栄光への道』ロスター</div>\n      <div css={[tabStyles, isPtgRoster || activeTabStyles]} onClick={() => setIsPtgRoster(false)}>戦闘序列</div>\n    </div>\n  )\n}\n\nconst tabStyles = css`\n  ${tw`relative flex-1 py-2 border rounded rounded-b-none text-xs text-center bg-white cursor-pointer text-gray-500`}\n  bottom: -1px;\n`;\n\nconst activeTabStyles = css`\n  ${tw`bg-gray-100 text-black`}\n  border-bottom-color: rgba(243, 244, 246, var(--tw-border-opacity));\n`;","export const ptgStateData = {\n  playerName: '',\n  armyName: '',\n  faction: '',\n  subfaction: '',\n  realmOfOrigin: '',\n  startingSize: 'ヴァンガード (600pt)',\n  // QUEST LOG\n  questLog: {\n    current: '',\n    reward: '',\n    progress: '',\n  },\n  // GLORY POINTS\n  gloryPoints: 0,\n  // STRONGHOLD\n  stronghold: {\n    name: '',\n    barracks: 0,\n    hasImposing: false,\n    hasMighty: false,\n  },\n  // ARCHIVEMENTS\n  archivements: {\n    battleFought: 0,\n    victoriesWon: 0,\n    questsCompleted: 0,\n    enemyHeroesSlain: 0,\n  },\n  // THE VAULT\n  theVault: {\n    artefact1: '',\n    artefact2: '',\n    artefact3: '',\n    artefact4: '',\n    artefact5: '',\n    artefact6: '',\n    spell1: '',\n    spell2: '',\n    spell3: '',\n    spell4: '',\n    spell5: '',\n    spell6: '',\n    prayer1: '',\n    prayer2: '',\n    prayer3: '',\n    prayer4: '',\n    prayer5: '',\n    prayer6: '',\n    uniqueEnhancement1: '',\n    uniqueEnhancement2: '',\n    uniqueEnhancement3: '',\n    uniqueEnhancement4: '',\n    uniqueEnhancement5: '',\n    uniqueEnhancement6: '',\n    endlessSpell1: '',\n    endlessSpell2: '',\n    endlessSpell3: '',\n    triumph: '',\n    battalion1: '',\n    battalion2: '',\n    battalion3: '',\n    battalion4: '',\n    battalion5: '',\n    battalion6: '',\n  },\n  territories: {\n    stronghold: {\n      territory1: {\n        name: '',\n        type: '',\n        isUpgraded: false,\n      },\n      territory2: {\n        name: '',\n        type: '',\n        isUpgraded: false,\n      },\n      territory3: {\n        name: '',\n        type: '',\n        isUpgraded: false,\n      },\n    },\n    imposing: {\n      territory1: {\n        name: '',\n        type: '',\n        isUpgraded: false,\n      },\n      territory2: {\n        name: '',\n        type: '',\n        isUpgraded: false,\n      },\n      territory3: {\n        name: '',\n        type: '',\n        isUpgraded: false,\n      },\n    },\n    mighty: {\n      territory1: {\n        name: '',\n        type: '',\n        isUpgraded: false,\n      },\n      territory2: {\n        name: '',\n        type: '',\n        isUpgraded: false,\n      },\n      territory3: {\n        name: '',\n        type: '',\n        isUpgraded: false,\n      },\n    },\n  },\n  // WARLORD\n  warlord: {\n    name: '',\n    warscroll: '',\n    commandTrait: '',\n    coreEnhancement: '',\n    injury: '',\n    renownPoints: 0,\n    points: 0,\n  },\n  // HEROES\n  heroes: {\n    hero1: {\n      name: '',\n      warscroll: '',\n      commandTrait: '',\n      coreEnhancement: '',\n      injury: '',\n      renownPoints: 0,\n      points: 0,\n    },\n    hero2: {\n      name: '',\n      warscroll: '',\n      commandTrait: '',\n      coreEnhancement: '',\n      injury: '',\n      renownPoints: 0,\n      points: 0,\n    },\n    hero3: {\n      name: '',\n      warscroll: '',\n      commandTrait: '',\n      coreEnhancement: '',\n      injury: '',\n      renownPoints: 0,\n      points: 0,\n    },\n  },\n  // OTHER UNITS\n  otherUnits: {\n    unit1: {\n      name: '',\n      warscroll: '',\n      veteranAbilities: '',\n      reinforced1: false,\n      reinforced2: false,\n      casualtyScore: 0,\n      renownPoints: 0,\n      points: 0,\n    },\n    unit2: {\n      name: '',\n      warscroll: '',\n      veteranAbilities: '',\n      reinforced1: false,\n      reinforced2: false,\n      casualtyScore: 0,\n      renownPoints: 0,\n      points: 0,\n    },\n    unit3: {\n      name: '',\n      warscroll: '',\n      veteranAbilities: '',\n      reinforced1: false,\n      reinforced2: false,\n      casualtyScore: 0,\n      renownPoints: 0,\n      points: 0,\n    },\n    unit4: {\n      name: '',\n      warscroll: '',\n      veteranAbilities: '',\n      reinforced1: false,\n      reinforced2: false,\n      casualtyScore: 0,\n      renownPoints: 0,\n      points: 0,\n    },\n    unit5: {\n      name: '',\n      warscroll: '',\n      veteranAbilities: '',\n      reinforced1: false,\n      reinforced2: false,\n      casualtyScore: 0,\n      renownPoints: 0,\n      points: 0,\n    },\n    unit6: {\n      name: '',\n      warscroll: '',\n      veteranAbilities: '',\n      reinforced1: false,\n      reinforced2: false,\n      casualtyScore: 0,\n      renownPoints: 0,\n      points: 0,\n    },\n    unit7: {\n      name: '',\n      warscroll: '',\n      veteranAbilities: '',\n      reinforced1: false,\n      reinforced2: false,\n      casualtyScore: 0,\n      renownPoints: 0,\n      points: 0,\n    },\n    unit8: {\n      name: '',\n      warscroll: '',\n      veteranAbilities: '',\n      reinforced1: false,\n      reinforced2: false,\n      casualtyScore: 0,\n      renownPoints: 0,\n      points: 0,\n    },\n    unit9: {\n      name: '',\n      warscroll: '',\n      veteranAbilities: '',\n      reinforced1: false,\n      reinforced2: false,\n      casualtyScore: 0,\n      renownPoints: 0,\n      points: 0,\n    },\n    unit10: {\n      name: '',\n      warscroll: '',\n      veteranAbilities: '',\n      reinforced1: false,\n      reinforced2: false,\n      casualtyScore: 0,\n      renownPoints: 0,\n      points: 0,\n    },\n    unit11: {\n      name: '',\n      warscroll: '',\n      veteranAbilities: '',\n      reinforced1: false,\n      reinforced2: false,\n      casualtyScore: 0,\n      renownPoints: 0,\n      points: 0,\n    },\n    unit12: {\n      name: '',\n      warscroll: '',\n      veteranAbilities: '',\n      reinforced1: false,\n      reinforced2: false,\n      casualtyScore: 0,\n      renownPoints: 0,\n      points: 0,\n    },\n  },\n  // ORDER OF BATTLE LIMITS\n  orderOfBattleLimits: {\n    totalUnits: 6,\n    heroes: 3,\n    monsters: 1,\n    warMachines: 1,\n    wizards: 1,\n    priests: 1,\n    reinforcedUnits: 1,\n    allies: 1,\n  },\n};","import React, { createContext, useState, useEffect } from 'react';\nimport tw, { css } from 'twin.macro'\nimport deepmerge from 'deepmerge'\n\nimport { CheckboxField } from '../components/path-to-glory-roster-builder/CheckboxField';\nimport { FieldsetTitle } from '../components/path-to-glory-roster-builder/FieldsetTitle';\nimport { HeroUnit } from '../components/path-to-glory-roster-builder/HeroUnit';\nimport { Label } from \"../components/path-to-glory-roster-builder/Label\"\nimport { NumberField } from \"../components/path-to-glory-roster-builder/NumberField\"\nimport { OtherUnit } from '../components/path-to-glory-roster-builder/OtherUnit';\nimport { Section } from \"../components/path-to-glory-roster-builder/Section\"\nimport { SelectField } from \"../components/path-to-glory-roster-builder/SelectField\"\nimport { Tab } from \"../components/path-to-glory-roster-builder/Tab\"\nimport { Territories } from \"../components/path-to-glory-roster-builder/Territories\"\nimport { TextField } from \"../components/path-to-glory-roster-builder/TextField\"\nimport { TextareaField } from \"../components/path-to-glory-roster-builder/TextareaField\"\n\nimport { ptgStateData } from \"../components/path-to-glory-roster-builder/ptgStateData\";\n\nexport const PtgContext = createContext();\n\nconst PathToGloryRosterBuilder = () => {\n  const isBrowser = typeof window !== 'undefined';\n  const version = '0.1';\n\n  // ストレージに何もないとき、localStorageに初期データを格納\n  if (isBrowser) {\n    if (!localStorage.getItem('PtG')) {\n      localStorage.setItem('PtG', JSON.stringify(ptgStateData));\n    }\n    const [ls, setLs] = useState(JSON.parse(localStorage.getItem('PtG')));\n  }\n\n  const load = () => {\n    console.log('LOAD');\n    if (isBrowser) {\n      setLs(JSON.parse(localStorage.getItem('PtG')));\n    }\n    console.log(ls.playerName);\n  };\n\n  const save = () => {\n    console.log('SAVE');\n    if (isBrowser) {\n      localStorage.setItem('PtG', JSON.stringify(ls));\n    }\n  }\n\n  const handleInputChange = e => {\n    console.log('handleInputChange');\n    const target = e.target;\n    const nameArray = target.name.split('.');\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    let dataObject = {};\n\n    // 末尾から（深い階層から）再帰的にオブジェクトを作っていく\n    const generateDataObject = (nameArray, value, child) => {\n      const key = nameArray.pop();\n      dataObject = {[key]: child || value};\n      if (nameArray.length) generateDataObject(nameArray, value, dataObject);\n    };\n    generateDataObject(nameArray, value);\n    console.log(dataObject);\n\n    setLs(deepmerge(ls, dataObject));\n  }\n\n  const [isPtgRoster, setIsPtgRoster] = useState(true);\n\n  return (\n    <div css={tw`flex flex-col`}>\n      <div css={tw`flex items-center justify-between px-4 py-2 border-b border-black`}>\n        <h1 css={tw`m-0 text-sm`}>WH:AoS 「栄光への道」ロスタービルダー</h1>\n        <small>Ver {version}</small>\n      </div>\n      <div tw=\"mt-2 flex space-x-8 justify-center\">\n        <div tw=\"px-4 py-1 border border-yellow-400 bg-yellow-300 text-sm cursor-pointer\" onClick={load}>LOAD</div>\n        <div tw=\"px-4 py-1 border border-yellow-400 bg-yellow-300 text-sm cursor-pointer\" onClick={save}>SAVE</div>\n        {/* <div tw=\"px-2 border border-gray-400 bg-gray-300 text-sm\" onClick={() => console.log(ptg)}>CONSOLE</div> */}\n      </div>\n\n      <Tab isPtgRoster={isPtgRoster} setIsPtgRoster={setIsPtgRoster} />\n\n      <main>\n        <div css={isPtgRoster ? tw`block` : tw`hidden`}>\n          <Section>\n            <PtgContext.Provider value={ls.playerName}>\n              <TextField label=\"プレイヤー名\" name=\"playerName\" onUpdate={handleInputChange} />\n            </PtgContext.Provider>\n            <PtgContext.Provider value={ls.armyName}>\n              <TextField label=\"アーミー名\" name=\"armyName\" onUpdate={handleInputChange} />\n            </PtgContext.Provider>\n            {/* <TextField label=\"アーミー名\" name=\"armyName\" value={ls.armyName} onUpdate={handleInputChange} />\n            <TextField label=\"陣営\" name=\"faction\" value={ls.faction} onUpdate={handleInputChange} />\n            <TextField label=\"派閥\" name=\"subfaction\" value={ls.subfaction} onUpdate={handleInputChange} />\n            <TextField label=\"出身領域\" name=\"realmOfOrigin\" value={ls.realmOfOrigin} onUpdate={handleInputChange} />\n            <SelectField label=\"初期兵力\" name=\"startingSize\" value={ls.startingSize} onUpdate={handleInputChange}\n              options={[\n                'ヴァンガード (600pt)', 'ウォーバンド (1000pt)', 'ブリゲイド (1500pt)', 'レギオン (2000pt)'\n              ]}\n            /> */}\n          </Section>\n{/*  \n          <Section label=\"クエストログ\">\n            <TextField label=\"現行クエスト\" name=\"questLog.current\" value={ptg.questLog.current} onUpdate={handleInputChange} />\n            <TextField label=\"クエスト報酬\" name=\"questLog.reward\" value={ptg.questLog.reward} onUpdate={handleInputChange} />\n            <TextareaField label=\"クエスト進展\" name=\"questLog.progress\" value={ptg.questLog.progress} onUpdate={handleInputChange} />\n          </Section>\n          \n          <Section label=\"栄光ポイント\">\n            <NumberField label=\"栄光ポイント\" min=\"0\" name=\"gloryPoints\" value={ptg.gloryPoints} onUpdate={handleInputChange} />\n          </Section>\n          \n          <Section label=\"城\">\n            <TextField label=\"名前\" name=\"stronghold.name\" value={ptg.stronghold.name} onUpdate={handleInputChange} />\n            <NumberField label=\"兵舎\" min=\"0\" name=\"stronghold.barracks\" value={ptg.stronghold.barracks} onUpdate={handleInputChange} />\n            <div tw=\"flex\">\n              <div tw=\"w-1/2\"><CheckboxField label=\"城塞\" name=\"stronghold.hasImposing\" checked={ptg.stronghold.hasImposing} onUpdate={handleInputChange} /></div>\n              <div tw=\"w-1/2\"><CheckboxField label=\"大城塞\" name=\"stronghold.hasMighty\" checked={ptg.stronghold.hasMighty} onUpdate={handleInputChange} /></div>\n            </div>\n          </Section>\n          \n          <Section label=\"達成事項\">\n            <NumberField label=\"バトル回数\" min=\"0\" name=\"archivements.battleFought\" value={ptg.archivements.battleFought} onUpdate={handleInputChange} />\n            <NumberField label=\"勝利数\" min=\"0\" name=\"archivements.victoriesWon\" value={ptg.archivements.victoriesWon} onUpdate={handleInputChange} />\n            <NumberField label=\"達成クエスト\" min=\"0\" name=\"archivements.questsCompleted\" value={ptg.archivements.questsCompleted} onUpdate={handleInputChange} />\n            <NumberField label=\"敵ヒーロー撃破数\" min=\"0\" name=\"archivements.enemyHeroesSlain\" value={ptg.archivements.enemyHeroesSlain} onUpdate={handleInputChange} />\n          </Section>\n          \n          <Section label=\"宝物殿\">\n            <FieldsetTitle dark>ボーナス神器</FieldsetTitle>\n            { [...Array(6)].map((_, i) => <TextField label={i + 1} name={`theVault.artefact${i + 1}`} value={ptg.theVault[`artefact${i + 1}`]} onUpdate={handleInputChange} />)}\n            <FieldsetTitle dark>ボーナス呪文</FieldsetTitle>\n            { [...Array(6)].map((_, i) => <TextField label={i + 1} name={`theVault.spell${i + 1}`} value={ptg.theVault[`spell${i + 1}`]} onUpdate={handleInputChange} />)}\n            <FieldsetTitle dark>ボーナス奇蹟</FieldsetTitle>\n            { [...Array(6)].map((_, i) => <TextField label={i + 1} name={`theVault.prayer${i + 1}`} value={ptg.theVault[`prayer${i + 1}`]} onUpdate={handleInputChange} />)}\n            <FieldsetTitle dark>ボーナス固有強化</FieldsetTitle>\n            { [...Array(6)].map((_, i) => <TextField label={i + 1} name={`theVault.uniqueEnhancement${i + 1}`} value={ptg.theVault[`uniqueEnhancement${i + 1}`]} onUpdate={handleInputChange} />)}\n            <FieldsetTitle dark>永久呪文 / 顕現</FieldsetTitle>\n            { [...Array(3)].map((_, i) => <TextField label={i + 1} name={`theVault.endlessSpell${i + 1}`} value={ptg.theVault[`endlessSpell${i + 1}`]} onUpdate={handleInputChange} />)}\n            <FieldsetTitle dark>偉業</FieldsetTitle>\n            <TextField label=\"1\" name=\"theVault.triumph\" value={ptg.theVault.triumph} onUpdate={handleInputChange} />\n            <FieldsetTitle dark>バタリオン</FieldsetTitle>\n            { [...Array(6)].map((_, i) => <TextField label={i + 1} name={`theVault.battalion${i + 1}`} value={ptg.theVault[`battalion${i + 1}`]} onUpdate={handleInputChange} />)}\n          </Section>\n\n          <Section label=\"領地\">\n            <Territories label=\"城\" category=\"stronghold\" onUpdate={handleInputChange} />\n            <Territories label=\"城塞\" category=\"imposing\" onUpdate={handleInputChange} />\n            <Territories label=\"大城塞\" category=\"mighty\" onUpdate={handleInputChange} />\n          </Section>\n        </div>\n\n        <div css={isPtgRoster ? tw`hidden` : tw`block`}>\n          <Section label=\"ウォーロード\">\n            <TextField label=\"ファイター名\" name=\"warlord.name\" value={ptg.warlord.name} onUpdate={handleInputChange}  />\n            <TextField label=\"ウォースクロール\" name=\"warlord.warscroll\" value={ptg.warlord.warscroll} onUpdate={handleInputChange}  />\n            <TextField label=\"指揮特性\" name=\"warlord.commandTrait\" value={ptg.warlord.commandTrait} onUpdate={handleInputChange}  />\n            <TextareaField label=\"コア強化 / 備考\" name=\"warlord.coreEnhancements\" value={ptg.warlord.coreEnhancements} onUpdate={handleInputChange}  />\n            <TextField label=\"負傷\" name=\"warlord.injury\" value={ptg.warlord.injury} onUpdate={handleInputChange}  />\n            <div tw=\"flex\">\n              <div tw=\"flex border-b w-1/2\">\n                <Label tw=\"w-2/3\">名声値</Label>\n                <div css={pointsBodyStyles}>\n                  <input type=\"number\" min=\"0\" step=\"5\" css={pointsInputStyles} name=\"warlord.renownPoints\" value={ptg.warlord.renownPoints} onChange={handleInputChange} />\n                </div>\n              </div>\n              <div tw=\"flex border-b w-1/2\">\n                <Label tw=\"w-2/3\">ポイント</Label>\n                <div css={pointsBodyStyles}>\n                  <input type=\"number\" min=\"0\" step=\"5\" css={pointsInputStyles} name=\"warlord.points\" value={ptg.warlord.points} onChange={handleInputChange} />\n                </div>\n              </div>\n            </div>\n          </Section>\n\n          <Section label=\"ヒーロー\">\n            <HeroUnit id=\"1\" onUpdate={handleInputChange} />\n            <HeroUnit id=\"2\" onUpdate={handleInputChange} dark />\n            <HeroUnit id=\"3\" onUpdate={handleInputChange} />\n          </Section>\n\n          <Section label=\"その他のユニット\">\n            <OtherUnit id=\"1\" onUpdate={handleInputChange} />\n            <OtherUnit id=\"2\" onUpdate={handleInputChange} dark />\n            <OtherUnit id=\"3\" onUpdate={handleInputChange} />\n            <OtherUnit id=\"4\" onUpdate={handleInputChange} dark />\n            <OtherUnit id=\"5\" onUpdate={handleInputChange} />\n            <OtherUnit id=\"6\" onUpdate={handleInputChange} dark />\n            <OtherUnit id=\"7\" onUpdate={handleInputChange} />\n            <OtherUnit id=\"8\" onUpdate={handleInputChange} dark />\n            <OtherUnit id=\"9\" onUpdate={handleInputChange} />\n            <OtherUnit id=\"10\" onUpdate={handleInputChange} dark />\n            <OtherUnit id=\"11\" onUpdate={handleInputChange} />\n            <OtherUnit id=\"12\" onUpdate={handleInputChange} dark />\n          </Section>\n\n          <Section label=\"戦闘序列上限\">\n            <NumberField label=\"ユニット合計\" min=\"6\" value=\"6\" name=\"orderOfBattleLimits.totalUnits\" value={ptg.orderOfBattleLimits.totalUnits} onUpdate={handleInputChange} />\n            <NumberField label=\"ヒーロー\" min=\"3\" value=\"3\" name=\"orderOfBattleLimits.heroes\" value={ptg.orderOfBattleLimits.heroes} onUpdate={handleInputChange} />\n            <NumberField label=\"モンスター\" min=\"1\" value=\"1\" name=\"orderOfBattleLimits.monsters\" value={ptg.orderOfBattleLimits.monsters} onUpdate={handleInputChange} />\n            <NumberField label=\"ウォーマシン\" min=\"1\" value=\"1\" name=\"orderOfBattleLimits.warMachines\" value={ptg.orderOfBattleLimits.warMachines} onUpdate={handleInputChange} />\n            <NumberField label=\"ウィザード\" min=\"1\" value=\"1\" name=\"orderOfBattleLimits.wizards\" value={ptg.orderOfBattleLimits.wizards} onUpdate={handleInputChange} />\n            <NumberField label=\"プリースト\" min=\"1\" value=\"1\" name=\"orderOfBattleLimits.priests\" value={ptg.orderOfBattleLimits.priests} onUpdate={handleInputChange} />\n            <NumberField label=\"増強ユニット\" min=\"1\" value=\"1\" name=\"orderOfBattleLimits.reinforcedUnits\" value={ptg.orderOfBattleLimits.reinforcedUnits} onUpdate={handleInputChange} />\n            <NumberField label=\"同盟\" min=\"1\" value=\"1\" name=\"orderOfBattleLimits.allies\" value={ptg.orderOfBattleLimits.allies} onUpdate={handleInputChange} />\n          </Section>\n*/}\n        </div>\n      </main>\n    </div>\n  )\n}\n\nexport default PathToGloryRosterBuilder\n\nconst pointsBodyStyles = css`\n  ${tw`w-1/3 flex items-center justify-center bg-white`}\n`;\n\nconst pointsInputStyles = css`\n  ${tw`px-1 w-full h-full text-xs`}\n`;"],"names":["isMergeableObject","value","isNonNullObject","stringValue","Object","prototype","toString","call","$$typeof","REACT_ELEMENT_TYPE","isReactElement","isSpecial","Symbol","for","cloneUnlessOtherwiseSpecified","options","clone","deepmerge","val","Array","isArray","defaultArrayMerge","target","source","concat","map","element","getKeys","keys","getOwnPropertySymbols","filter","symbol","propertyIsEnumerable","getEnumerableOwnPropertySymbols","propertyIsOnObject","object","property","_","mergeObject","destination","forEach","key","hasOwnProperty","propertyIsUnsafe","customMerge","getMergeFunction","arrayMerge","sourceIsArray","all","array","Error","reduce","prev","next","deepmerge_1","module","exports","excluded","i","sourceKeys","length","indexOf","Label","children","dark","props","css","labelStyles","TextField","label","name","onUpdate","ptg","useContext","PtgContext","console","log","type","inputStyles","onChange","Section","sectionStyles","bodyStyles","Tab","isPtgRoster","setIsPtgRoster","tabStyles","activeTabStyles","onClick","ptgStateData","playerName","armyName","faction","subfaction","realmOfOrigin","startingSize","questLog","current","reward","progress","gloryPoints","stronghold","barracks","hasImposing","hasMighty","archivements","battleFought","victoriesWon","questsCompleted","enemyHeroesSlain","theVault","artefact1","artefact2","artefact3","artefact4","artefact5","artefact6","spell1","spell2","spell3","spell4","spell5","spell6","prayer1","prayer2","prayer3","prayer4","prayer5","prayer6","uniqueEnhancement1","uniqueEnhancement2","uniqueEnhancement3","uniqueEnhancement4","uniqueEnhancement5","uniqueEnhancement6","endlessSpell1","endlessSpell2","endlessSpell3","triumph","battalion1","battalion2","battalion3","battalion4","battalion5","battalion6","territories","territory1","isUpgraded","territory2","territory3","imposing","mighty","warlord","warscroll","commandTrait","coreEnhancement","injury","renownPoints","points","heroes","hero1","hero2","hero3","otherUnits","unit1","veteranAbilities","reinforced1","reinforced2","casualtyScore","unit2","unit3","unit4","unit5","unit6","unit7","unit8","unit9","unit10","unit11","unit12","orderOfBattleLimits","totalUnits","monsters","warMachines","wizards","priests","reinforcedUnits","allies","createContext","isBrowser","window","localStorage","getItem","setItem","JSON","stringify","useState","parse","handleInputChange","e","nameArray","split","checked","dataObject","generateDataObject","child","pop","setLs","ls","Provider"],"sourceRoot":""}