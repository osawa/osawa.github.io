{"version":3,"sources":["webpack://gatsby-starter-blog/./node_modules/deepmerge/dist/cjs.js","webpack://gatsby-starter-blog/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://gatsby-starter-blog/./src/components/path-to-glory-roster-builder/Label.js","webpack://gatsby-starter-blog/./src/components/path-to-glory-roster-builder/CheckboxField.js","webpack://gatsby-starter-blog/./src/components/path-to-glory-roster-builder/FieldsetTitle.js","webpack://gatsby-starter-blog/./src/components/path-to-glory-roster-builder/TextField.js","webpack://gatsby-starter-blog/./src/components/path-to-glory-roster-builder/TextareaField.js","webpack://gatsby-starter-blog/./src/components/path-to-glory-roster-builder/HeroUnit.js","webpack://gatsby-starter-blog/./src/components/path-to-glory-roster-builder/NumberField.js","webpack://gatsby-starter-blog/./src/components/path-to-glory-roster-builder/OtherUnit.js","webpack://gatsby-starter-blog/./src/components/path-to-glory-roster-builder/Section.js","webpack://gatsby-starter-blog/./src/components/path-to-glory-roster-builder/SelectField.js","webpack://gatsby-starter-blog/./src/components/path-to-glory-roster-builder/Tab.js","webpack://gatsby-starter-blog/./src/components/path-to-glory-roster-builder/Territory.js","webpack://gatsby-starter-blog/./src/components/path-to-glory-roster-builder/Territories.js","webpack://gatsby-starter-blog/./src/components/path-to-glory-roster-builder/ptgStateData.js","webpack://gatsby-starter-blog/./src/pages/path-to-glory-roster-builder.js"],"names":["isMergeableObject","value","isNonNullObject","stringValue","Object","prototype","toString","call","$$typeof","REACT_ELEMENT_TYPE","isReactElement","isSpecial","Symbol","for","cloneUnlessOtherwiseSpecified","options","clone","deepmerge","val","Array","isArray","defaultArrayMerge","target","source","concat","map","element","getKeys","keys","getOwnPropertySymbols","filter","symbol","propertyIsEnumerable","getEnumerableOwnPropertySymbols","propertyIsOnObject","object","property","_","mergeObject","destination","forEach","key","hasOwnProperty","propertyIsUnsafe","customMerge","getMergeFunction","arrayMerge","sourceIsArray","all","array","Error","reduce","prev","next","deepmerge_1","module","exports","_objectWithoutPropertiesLoose","excluded","i","sourceKeys","length","indexOf","Label","children","dark","props","css","labelStyles","CheckboxField","label","name","checked","onUpdate","bodyStyles","type","onChange","FieldsetTitle","fieldsetTitleStyles","TextField","inputStyles","TextareaField","HeroUnit","id","ptg","useContext","PtgContext","hero","heroes","warscroll","commandTrait","coreEnhancements","injury","min","step","renownPoints","points","NumberField","OtherUnit","unit","otherUnits","veteranAbilities","checkboxBoxStyles","reinforced1","reinforced2","casualtyScore","Section","sectionStyles","SelectField","optionJSX","option","selected","console","log","selectStyles","Tab","isPtgRoster","setIsPtgRoster","tabStyles","activeTabStyles","onClick","Territory","category","territoryName","territoryType","territoryIsUpgraded","nameValue","territories","typeValue","upgradedValue","Boolean","isUpgraded","inputBoxStyles","Territories","ptgStateData","playerName","armyName","faction","subfaction","realmOfOrigin","startingSize","questLog","current","reward","progress","gloryPoints","stronghold","barracks","hasImposing","hasMighty","archivements","battleFought","victoriesWon","questsCompleted","enemyHeroesSlain","theVault","artefact1","artefact2","artefact3","artefact4","artefact5","artefact6","spell1","spell2","spell3","spell4","spell5","spell6","prayer1","prayer2","prayer3","prayer4","prayer5","prayer6","uniqueEnhancement1","uniqueEnhancement2","uniqueEnhancement3","uniqueEnhancement4","uniqueEnhancement5","uniqueEnhancement6","endlessSpell1","endlessSpell2","endlessSpell3","triumph","battalion1","battalion2","battalion3","battalion4","battalion5","battalion6","territory1","territory2","territory3","imposing","mighty","warlord","coreEnhancement","hero1","hero2","hero3","unit1","unit2","unit3","unit4","unit5","unit6","unit7","unit8","unit9","unit10","unit11","unit12","orderOfBattleLimits","totalUnits","monsters","warMachines","wizards","priests","reinforcedUnits","allies","createContext","useState","setPtg","useEffect","localStorage","getItem","setItem","JSON","stringify","handleInputChange","e","nameArray","split","inputData","generateDataObject","child","pop","data","setDataToStorage","parse","Provider","pointsBodyStyles","pointsInputStyles"],"mappings":"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","file":"component---src-pages-path-to-glory-roster-builder-js-76d54b868d63fe6a4f70.js","sourcesContent":["'use strict';\n\nvar isMergeableObject = function isMergeableObject(value) {\n  return isNonNullObject(value) && !isSpecial(value);\n};\n\nfunction isNonNullObject(value) {\n  return !!value && typeof value === 'object';\n}\n\nfunction isSpecial(value) {\n  var stringValue = Object.prototype.toString.call(value);\n  return stringValue === '[object RegExp]' || stringValue === '[object Date]' || isReactElement(value);\n} // see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\n\n\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n  return value.$$typeof === REACT_ELEMENT_TYPE;\n}\n\nfunction emptyTarget(val) {\n  return Array.isArray(val) ? [] : {};\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n  return options.clone !== false && options.isMergeableObject(value) ? deepmerge(emptyTarget(value), value, options) : value;\n}\n\nfunction defaultArrayMerge(target, source, options) {\n  return target.concat(source).map(function (element) {\n    return cloneUnlessOtherwiseSpecified(element, options);\n  });\n}\n\nfunction getMergeFunction(key, options) {\n  if (!options.customMerge) {\n    return deepmerge;\n  }\n\n  var customMerge = options.customMerge(key);\n  return typeof customMerge === 'function' ? customMerge : deepmerge;\n}\n\nfunction getEnumerableOwnPropertySymbols(target) {\n  return Object.getOwnPropertySymbols ? Object.getOwnPropertySymbols(target).filter(function (symbol) {\n    return target.propertyIsEnumerable(symbol);\n  }) : [];\n}\n\nfunction getKeys(target) {\n  return Object.keys(target).concat(getEnumerableOwnPropertySymbols(target));\n}\n\nfunction propertyIsOnObject(object, property) {\n  try {\n    return property in object;\n  } catch (_) {\n    return false;\n  }\n} // Protects from prototype poisoning and unexpected merging up the prototype chain.\n\n\nfunction propertyIsUnsafe(target, key) {\n  return propertyIsOnObject(target, key) // Properties are safe to merge if they don't exist in the target yet,\n  && !(Object.hasOwnProperty.call(target, key) // unsafe if they exist up the prototype chain,\n  && Object.propertyIsEnumerable.call(target, key)); // and also unsafe if they're nonenumerable.\n}\n\nfunction mergeObject(target, source, options) {\n  var destination = {};\n\n  if (options.isMergeableObject(target)) {\n    getKeys(target).forEach(function (key) {\n      destination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n    });\n  }\n\n  getKeys(source).forEach(function (key) {\n    if (propertyIsUnsafe(target, key)) {\n      return;\n    }\n\n    if (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {\n      destination[key] = getMergeFunction(key, options)(target[key], source[key], options);\n    } else {\n      destination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n    }\n  });\n  return destination;\n}\n\nfunction deepmerge(target, source, options) {\n  options = options || {};\n  options.arrayMerge = options.arrayMerge || defaultArrayMerge;\n  options.isMergeableObject = options.isMergeableObject || isMergeableObject; // cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()\n  // implementations can use it. The caller may not replace it.\n\n  options.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;\n  var sourceIsArray = Array.isArray(source);\n  var targetIsArray = Array.isArray(target);\n  var sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n  if (!sourceAndTargetTypesMatch) {\n    return cloneUnlessOtherwiseSpecified(source, options);\n  } else if (sourceIsArray) {\n    return options.arrayMerge(target, source, options);\n  } else {\n    return mergeObject(target, source, options);\n  }\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n  if (!Array.isArray(array)) {\n    throw new Error('first argument should be an array');\n  }\n\n  return array.reduce(function (prev, next) {\n    return deepmerge(prev, next, options);\n  }, {});\n};\n\nvar deepmerge_1 = deepmerge;\nmodule.exports = deepmerge_1;","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React, { useState } from 'react';\nimport tw, { css } from 'twin.macro'\n\nexport const Label = ({children, dark, ...props}) => {\n  return (\n    <div css={[labelStyles, dark ? tw`bg-green-500` : tw`bg-green-300`]} {...props}>{children}{dark}</div>\n  )\n}\n\nconst labelStyles = css`\n  ${tw`p-1 border-r text-sm leading-4 text-xs`}\n`;\n","import React, { useState } from 'react';\nimport tw, { css } from 'twin.macro'\n\nimport { Label } from \"./Label\"\n\nexport const CheckboxField = ({label, dark, name, checked, onUpdate}) => {\n  return (\n    <div tw=\"flex border-b\">\n      <Label tw=\"w-2/3\" dark={dark}>{label}</Label>\n      <div css={bodyStyles}>\n        <input type=\"checkbox\" tw=\"block\" name={name} checked={checked} onChange={onUpdate} />\n      </div>\n    </div>\n  );\n};\n\nconst bodyStyles = css`\n  ${tw`p-1 w-1/3 flex items-center justify-center bg-white`}\n`;\n","import React, { useState } from 'react';\nimport tw, { css } from 'twin.macro'\n\nexport const FieldsetTitle = ({children, dark, ...props}) => {\n  return (\n    <div css={[fieldsetTitleStyles, dark ? tw`bg-green-500` : tw`bg-green-300`]} {...props}>{children}{dark}</div>\n  )\n}\n\nconst fieldsetTitleStyles = css`\n  ${tw`p-1 border-b text-sm leading-4 text-xs`}\n`;\n","import React, { useState } from 'react';\nimport tw, { css } from 'twin.macro'\n\nimport { Label } from \"./Label\"\n\nexport const TextField = ({label, dark, name, value, onUpdate}) => {\n  // const [val, setVal] = useState(value);\n  return (\n    <div tw=\"flex border-b\">\n      <Label tw=\"w-1/3\" dark={dark}>{label}</Label>\n      <div tw=\"w-2/3\">\n        <input type=\"text\" css={inputStyles} name={name} value={value} onChange={onUpdate} />\n      </div>\n    </div>\n  );\n};\n\nconst inputStyles = css`\n  ${tw`block px-1 w-full h-full text-xs`}\n`;\n","import React, { useState } from 'react';\nimport tw, { css } from 'twin.macro'\n\nimport { Label } from \"./Label\"\n\nexport const TextareaField = ({label, dark, name, value, onUpdate}) => {\n  return (\n    <div tw=\"flex border-b\">\n      <Label tw=\"w-1/3\" dark={dark}>{label}</Label>\n      <div tw=\"w-2/3\">\n        <textarea css={inputStyles} name={name} value={value} onChange={onUpdate}></textarea>\n      </div>\n    </div>\n  );\n};\n\nconst inputStyles = css`\n  ${tw`block p-1 w-full h-20 text-xs leading-4`}\n`;\n","import React, { useContext } from 'react';\nimport tw, { css } from 'twin.macro'\n\nimport { PtgContext } from '../../pages/path-to-glory-roster-builder';\n\nimport { Label } from \"./Label\"\nimport { TextField } from \"./TextField\"\nimport { TextareaField } from \"./TextareaField\"\n\nexport const HeroUnit = ({id, dark, onUpdate}) => {\n  const ptg = useContext(PtgContext);\n  const hero = `hero${id}`;\n  return (\n    <>\n      <TextField label=\"ファイター名\" name={`heroes.hero${id}.name`} value={ptg.heroes[hero].name} onUpdate={onUpdate} dark={dark} />\n      <TextField label=\"ウォースクロール\" name={`heroes.hero${id}.warscroll`} value={ptg.heroes[hero].warscroll} onUpdate={onUpdate} dark={dark} />\n      <TextField label=\"指揮特性\" name={`heroes.hero${id}.commandTrait`} value={ptg.heroes[hero].commandTrait} onUpdate={onUpdate} dark={dark} />\n      <TextareaField label=\"コア強化 / 備考\" name={`heroes.hero${id}.coreEnhancements`} value={ptg.heroes[hero].coreEnhancements} onUpdate={onUpdate} dark={dark} />\n      <TextField label=\"負傷\" name={`heroes.hero${id}.injury` }value={ptg.heroes[hero].injury} onUpdate={onUpdate} dark={dark} />\n      <div tw=\"flex\">\n        <div tw=\"flex border-b w-1/2\">\n          <Label tw=\"w-2/3\" dark={dark}>名声値</Label>\n          <div css={bodyStyles}>\n            <input type=\"number\" min=\"0\" step=\"5\" css={inputStyles} name={`heroes.hero${id}.renownPoints`} value={ptg.heroes[hero].renownPoints} onChange={onUpdate} />\n          </div>\n        </div>\n        <div tw=\"flex border-b w-1/2\">\n          <Label tw=\"w-2/3\" dark={dark}>ポイント</Label>\n          <div css={bodyStyles}>\n            <input type=\"number\" min=\"0\" step=\"5\" css={inputStyles} name={`heroes.hero${id}.points`} value={ptg.heroes[hero].points} onChange={onUpdate} />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nconst bodyStyles = css`\n  ${tw`w-1/3 flex items-center justify-center bg-white`}\n`;\n\nconst inputStyles = css`\n  ${tw`px-1 w-full h-full text-xs`}\n`;\n","import React, { useState } from 'react';\nimport tw, { css } from 'twin.macro'\n\nimport { Label } from \"./Label\"\n\nexport const NumberField = ({label, dark, name, value, onUpdate, ...props}) => {\n  return (\n    <div tw=\"flex border-b\">\n      <Label tw=\"w-1/3\" dark={dark}>{label}</Label>\n      <div tw=\"w-2/3\">\n        <input type=\"number\" css={inputStyles} name={name} value={value} onChange={onUpdate} {...props} />\n      </div>\n    </div>\n  );\n};\n\nconst inputStyles = css`\n  ${tw`block px-1 w-full h-full text-xs`}\n`;\n","import React, { useContext } from 'react';\nimport tw, { css } from 'twin.macro'\n\nimport { PtgContext } from '../../pages/path-to-glory-roster-builder';\n\nimport { Label } from \"./Label\"\nimport { TextField } from \"./TextField\"\nimport { TextareaField } from \"./TextareaField\"\n\nexport const OtherUnit = ({id, dark, onUpdate}) => {\n  const ptg = useContext(PtgContext);\n  const unit = `unit${id}`;\n  return (\n    <>\n      <TextField label=\"ファイター名\" name={`otherUnits.unit${id}.name`} value={ptg.otherUnits[unit].name} onUpdate={onUpdate} dark={dark} />\n      <TextField label=\"ウォースクロール\" name={`otherUnits.unit${id}.warscroll`} value={ptg.otherUnits[unit].warscroll} onUpdate={onUpdate} dark={dark} />\n      <TextareaField label='歴戦アビリティ / 備考' name={`otherUnits.unit${id}.veteranAbilities`} value={ptg.otherUnits[unit].veteranAbilities} onUpdate={onUpdate} dark={dark} />\n      <div tw=\"flex\">\n        <div tw=\"flex border-b w-1/2\">\n          <Label tw=\"w-2/3\" dark={dark}>増強</Label>\n          <div css={checkboxBoxStyles}>\n            <input type=\"checkbox\" tw=\"block\" name={`otherUnits.unit${id}.reinforced2`} checked={ptg.otherUnits[unit].reinforced1} onChange={onUpdate} />\n            <input type=\"checkbox\" tw=\"block\" name={`otherUnits.unit${id}.reinforced2`} checked={ptg.otherUnits[unit].reinforced2} onChange={onUpdate} />\n          </div>\n        </div>\n        <div tw=\"flex border-b w-1/2\">\n          <Label tw=\"w-2/3\" dark={dark}>損耗スコア</Label>\n          <div css={bodyStyles}>\n            <input type=\"number\" min=\"0\" step=\"5\" css={inputStyles} name={`otherUnits.unit${id}.casualtyScore`} value={ptg.otherUnits[unit].casualtyScore} onChange={onUpdate} />\n          </div>\n        </div>\n      </div>\n      <div tw=\"flex\">\n        <div tw=\"flex border-b w-1/2\">\n          <Label tw=\"w-2/3\" dark={dark}>名声値</Label>\n          <div css={bodyStyles}>\n            <input type=\"number\" min=\"0\" step=\"5\" css={inputStyles} name={`otherUnits.unit${id}.renownPoints`} value={ptg.otherUnits[unit].renownPoints} onChange={onUpdate} />\n          </div>\n        </div>\n        <div tw=\"flex border-b w-1/2\">\n          <Label tw=\"w-2/3\" dark={dark}>ポイント</Label>\n          <div css={bodyStyles}>\n            <input type=\"number\" min=\"0\" step=\"5\" css={inputStyles} name={`otherUnits.unit${id}.points`} value={ptg.otherUnits[unit].points} onChange={onUpdate} />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nconst bodyStyles = css`\n  ${tw`w-1/3 flex items-center justify-center bg-white`}\n`;\n\nconst checkboxBoxStyles = css`\n  ${tw`p-1 w-1/3 flex items-center justify-center space-x-2 bg-white`}\n`;\n\nconst inputStyles = css`\n  ${tw`px-1 w-full h-full text-xs`}\n`;\n","import React, { useState } from 'react';\nimport tw, { css } from 'twin.macro'\n\nexport const Section = ({children, label, ...props}) => {\n  return (\n    <section css={sectionStyles} {...props}>\n      {label && <div css={labelStyles}>{label}</div>}\n      <div css={bodyStyles}>{children}</div>\n    </section>\n  )\n}\n\nconst sectionStyles = css`\n  ${tw`px-2 pt-2 pb-4 bg-gray-100`}\n`;\n\nconst labelStyles = css`\n  ${tw`font-medium text-sm text-center`}\n`;\n\nconst bodyStyles = css`\n  ${tw`mt-2 border border-b-0`}\n`;\n","import React, { useState } from 'react';\nimport tw, { css } from 'twin.macro'\n\nimport { Label } from \"./Label\"\n\n// TODO: optionsをhash対応\nexport const SelectField = ({label, name, value, dark, options, onUpdate}) => {\n  const optionJSX = options.map((option) => {\n    const selected = option == value;\n    console.log(selected);\n    return (\n      <option value={option} key={option} selected={selected}>{option}</option>\n    );\n  });\n  const Options = () => {\n    return optionJSX;\n  };\n  return (\n    <div tw=\"flex border-b\">\n      <Label tw=\"w-1/3\" dark={dark}>{label}</Label>\n      <div tw=\"w-2/3\">\n        <select css={selectStyles} name={name} onChange={onUpdate}>\n          <Options />\n        </select>\n      </div>\n    </div>\n  );\n};\n\nconst selectStyles = css`\n  ${tw`block w-full h-full text-xs`}\n`;\n","import React, { useState } from 'react';\nimport tw, { css } from 'twin.macro'\n\nexport const Tab = ({isPtgRoster, setIsPtgRoster}) => {\n  return (\n    <div tw=\"flex justify-between space-x-2 mt-2 px-4 border-b w-full\">\n      <div css={[tabStyles, isPtgRoster && activeTabStyles]} onClick={() => setIsPtgRoster(true)}>『栄光への道』ロスター</div>\n      <div css={[tabStyles, isPtgRoster || activeTabStyles]} onClick={() => setIsPtgRoster(false)}>戦闘序列</div>\n    </div>\n  )\n}\n\nconst tabStyles = css`\n  ${tw`relative flex-1 py-2 border rounded rounded-b-none text-xs text-center bg-white cursor-pointer text-gray-500`}\n  bottom: -1px;\n`;\n\nconst activeTabStyles = css`\n  ${tw`bg-gray-100 text-black`}\n  border-bottom-color: rgba(243, 244, 246, var(--tw-border-opacity));\n`;","import React, { useContext, useState } from 'react';\nimport tw, { css } from 'twin.macro'\n\nimport { PtgContext } from '../../pages/path-to-glory-roster-builder';\n\nexport const Territory = ({category, id, onUpdate}) => {\n  const ptg = useContext(PtgContext);\n  const territoryName = `territories.${category}.territory${id}.name`;\n  const territoryType = `territories.${category}.territory${id}.type`;\n  const territoryIsUpgraded = `territories.${category}.territory${id}.isUpgraded`;\n  const nameValue = ptg.territories[category][`territory${id}`].name;\n  const typeValue = ptg.territories[category][`territory${id}`].type;\n  const upgradedValue = Boolean(ptg.territories[category][`territory${id}`].isUpgraded);\n\n  return (\n    <div tw=\"flex w-full border-b\">\n      <div css={inputBoxStyles}>\n        <input type=\"text\" css={inputStyles} name={territoryName} value={nameValue} onChange={onUpdate} />\n      </div>\n      <div css={inputBoxStyles}>\n        <input type=\"text\" css={inputStyles} name={territoryType} value={typeValue} onChange={onUpdate} />\n      </div>\n      <div css={checkboxBoxStyles}>\n        <input type=\"checkbox\" tw=\"block\" name={territoryIsUpgraded} checked={upgradedValue} onChange={onUpdate} />\n      </div>\n    </div>\n  );\n};\n\nconst inputBoxStyles = css`\n${tw`border-r w-1/3 text-xs`}\n`;\n\nconst inputStyles = css`\n${tw`p-1 w-full h-full text-xs`}\n`;\n\nconst checkboxBoxStyles = css`\n${tw`p-1 w-1/3 flex items-center justify-center bg-white`}\n`;\n","import React, { useState } from 'react';\nimport tw, { css } from 'twin.macro'\n\nimport { FieldsetTitle } from \"./FieldsetTitle\"\nimport { Label } from \"./Label\"\nimport { Territory } from \"./Territory\"\n\nexport const Territories = ({children, label, category, onUpdate}) => {\n\n  return (\n    <>\n      <FieldsetTitle dark>{label}</FieldsetTitle>\n      <div tw=\"flex w-full\">\n        <Label tw=\"w-1/3 text-xs\">領地名</Label>\n        <Label tw=\"w-1/3 text-xs\">領地種別</Label>\n        <Label tw=\"w-1/3 text-xs\">アップグレード</Label>\n      </div>\n      <Territory category={category} id=\"1\" onUpdate={onUpdate} />\n      <Territory category={category} id=\"2\" onUpdate={onUpdate} />\n      <Territory category={category} id=\"3\" onUpdate={onUpdate} />\n    </>\n  );\n}\n","export const ptgStateData = {\n  playerName: '',\n  armyName: '',\n  faction: '',\n  subfaction: '',\n  realmOfOrigin: '',\n  startingSize: 'ヴァンガード (600pt)',\n  // QUEST LOG\n  questLog: {\n    current: '',\n    reward: '',\n    progress: '',\n  },\n  // GLORY POINTS\n  gloryPoints: 0,\n  // STRONGHOLD\n  stronghold: {\n    name: '',\n    barracks: 0,\n    hasImposing: false,\n    hasMighty: false,\n  },\n  // ARCHIVEMENTS\n  archivements: {\n    battleFought: 0,\n    victoriesWon: 0,\n    questsCompleted: 0,\n    enemyHeroesSlain: 0,\n  },\n  // THE VAULT\n  theVault: {\n    artefact1: '',\n    artefact2: '',\n    artefact3: '',\n    artefact4: '',\n    artefact5: '',\n    artefact6: '',\n    spell1: '',\n    spell2: '',\n    spell3: '',\n    spell4: '',\n    spell5: '',\n    spell6: '',\n    prayer1: '',\n    prayer2: '',\n    prayer3: '',\n    prayer4: '',\n    prayer5: '',\n    prayer6: '',\n    uniqueEnhancement1: '',\n    uniqueEnhancement2: '',\n    uniqueEnhancement3: '',\n    uniqueEnhancement4: '',\n    uniqueEnhancement5: '',\n    uniqueEnhancement6: '',\n    endlessSpell1: '',\n    endlessSpell2: '',\n    endlessSpell3: '',\n    triumph: '',\n    battalion1: '',\n    battalion2: '',\n    battalion3: '',\n    battalion4: '',\n    battalion5: '',\n    battalion6: '',\n  },\n  territories: {\n    stronghold: {\n      territory1: {\n        name: '',\n        type: '',\n        isUpgraded: false,\n      },\n      territory2: {\n        name: '',\n        type: '',\n        isUpgraded: false,\n      },\n      territory3: {\n        name: '',\n        type: '',\n        isUpgraded: false,\n      },\n    },\n    imposing: {\n      territory1: {\n        name: '',\n        type: '',\n        isUpgraded: false,\n      },\n      territory2: {\n        name: '',\n        type: '',\n        isUpgraded: false,\n      },\n      territory3: {\n        name: '',\n        type: '',\n        isUpgraded: false,\n      },\n    },\n    mighty: {\n      territory1: {\n        name: '',\n        type: '',\n        isUpgraded: false,\n      },\n      territory2: {\n        name: '',\n        type: '',\n        isUpgraded: false,\n      },\n      territory3: {\n        name: '',\n        type: '',\n        isUpgraded: false,\n      },\n    },\n  },\n  // WARLORD\n  warlord: {\n    name: '',\n    warscroll: '',\n    commandTrait: '',\n    coreEnhancement: '',\n    injury: '',\n    renownPoints: 0,\n    points: 0,\n  },\n  // HEROES\n  heroes: {\n    hero1: {\n      name: '',\n      warscroll: '',\n      commandTrait: '',\n      coreEnhancement: '',\n      injury: '',\n      renownPoints: 0,\n      points: 0,\n    },\n    hero2: {\n      name: '',\n      warscroll: '',\n      commandTrait: '',\n      coreEnhancement: '',\n      injury: '',\n      renownPoints: 0,\n      points: 0,\n    },\n    hero3: {\n      name: '',\n      warscroll: '',\n      commandTrait: '',\n      coreEnhancement: '',\n      injury: '',\n      renownPoints: 0,\n      points: 0,\n    },\n  },\n  // OTHER UNITS\n  otherUnits: {\n    unit1: {\n      name: '',\n      warscroll: '',\n      veteranAbilities: '',\n      reinforced1: false,\n      reinforced2: false,\n      casualtyScore: 0,\n      renownPoints: 0,\n      points: 0,\n    },\n    unit2: {\n      name: '',\n      warscroll: '',\n      veteranAbilities: '',\n      reinforced1: false,\n      reinforced2: false,\n      casualtyScore: 0,\n      renownPoints: 0,\n      points: 0,\n    },\n    unit3: {\n      name: '',\n      warscroll: '',\n      veteranAbilities: '',\n      reinforced1: false,\n      reinforced2: false,\n      casualtyScore: 0,\n      renownPoints: 0,\n      points: 0,\n    },\n    unit4: {\n      name: '',\n      warscroll: '',\n      veteranAbilities: '',\n      reinforced1: false,\n      reinforced2: false,\n      casualtyScore: 0,\n      renownPoints: 0,\n      points: 0,\n    },\n    unit5: {\n      name: '',\n      warscroll: '',\n      veteranAbilities: '',\n      reinforced1: false,\n      reinforced2: false,\n      casualtyScore: 0,\n      renownPoints: 0,\n      points: 0,\n    },\n    unit6: {\n      name: '',\n      warscroll: '',\n      veteranAbilities: '',\n      reinforced1: false,\n      reinforced2: false,\n      casualtyScore: 0,\n      renownPoints: 0,\n      points: 0,\n    },\n    unit7: {\n      name: '',\n      warscroll: '',\n      veteranAbilities: '',\n      reinforced1: false,\n      reinforced2: false,\n      casualtyScore: 0,\n      renownPoints: 0,\n      points: 0,\n    },\n    unit8: {\n      name: '',\n      warscroll: '',\n      veteranAbilities: '',\n      reinforced1: false,\n      reinforced2: false,\n      casualtyScore: 0,\n      renownPoints: 0,\n      points: 0,\n    },\n    unit9: {\n      name: '',\n      warscroll: '',\n      veteranAbilities: '',\n      reinforced1: false,\n      reinforced2: false,\n      casualtyScore: 0,\n      renownPoints: 0,\n      points: 0,\n    },\n    unit10: {\n      name: '',\n      warscroll: '',\n      veteranAbilities: '',\n      reinforced1: false,\n      reinforced2: false,\n      casualtyScore: 0,\n      renownPoints: 0,\n      points: 0,\n    },\n    unit11: {\n      name: '',\n      warscroll: '',\n      veteranAbilities: '',\n      reinforced1: false,\n      reinforced2: false,\n      casualtyScore: 0,\n      renownPoints: 0,\n      points: 0,\n    },\n    unit12: {\n      name: '',\n      warscroll: '',\n      veteranAbilities: '',\n      reinforced1: false,\n      reinforced2: false,\n      casualtyScore: 0,\n      renownPoints: 0,\n      points: 0,\n    },\n  },\n  // ORDER OF BATTLE LIMITS\n  orderOfBattleLimits: {\n    totalUnits: 6,\n    heroes: 3,\n    monsters: 1,\n    warMachines: 1,\n    wizards: 1,\n    priests: 1,\n    reinforcedUnits: 1,\n    allies: 1,\n  },\n};","import React, { createContext, useState, useEffect } from 'react';\nimport tw, { css } from 'twin.macro'\nimport deepmerge from 'deepmerge'\n\nimport { CheckboxField } from '../components/path-to-glory-roster-builder/CheckboxField';\nimport { FieldsetTitle } from '../components/path-to-glory-roster-builder/FieldsetTitle';\nimport { HeroUnit } from '../components/path-to-glory-roster-builder/HeroUnit';\nimport { Label } from \"../components/path-to-glory-roster-builder/Label\"\nimport { NumberField } from \"../components/path-to-glory-roster-builder/NumberField\"\nimport { OtherUnit } from '../components/path-to-glory-roster-builder/OtherUnit';\nimport { Section } from \"../components/path-to-glory-roster-builder/Section\"\nimport { SelectField } from \"../components/path-to-glory-roster-builder/SelectField\"\nimport { Tab } from \"../components/path-to-glory-roster-builder/Tab\"\nimport { Territories } from \"../components/path-to-glory-roster-builder/Territories\"\nimport { TextField } from \"../components/path-to-glory-roster-builder/TextField\"\nimport { TextareaField } from \"../components/path-to-glory-roster-builder/TextareaField\"\n\nimport { ptgStateData } from \"../components/path-to-glory-roster-builder/ptgStateData\";\n\nexport const PtgContext = createContext();\n\nconst PathToGloryRosterBuilder = () => {\n  const version = '0.1';\n\n  const [ptg, setPtg] = useState(ptgStateData);\n  const [ptgJson, setPtgJson] = useState();\n\n  // NOTE: Gatsbyのビルド時にエラーが出るのでuseEffect内に避難\n  useEffect(() => {\n    // ストレージに何もないとき、localStorageに初期データを格納\n    if (!localStorage.getItem('PtG')) {\n      localStorage.setItem('PtG', JSON.stringify(ptgStateData));\n    }\n  });\n\n  const load = () => {\n    setPtg(JSON.parse(localStorage.getItem('PtG')));\n  }\n  const save = () => {\n    localStorage.setItem('PtG', JSON.stringify(ptg));\n  }\n\n  const setDataToStorage = (inputData) => {\n    console.log('setDataToStorage');\n    const data = deepmerge(ptg, inputData);\n    console.log(inputData);\n    setPtg(data); // ここでドカンとレンダリングされてしまう\n    console.log(ptg);\n  }\n\n  const handleInputChange = e => {\n    console.log('handleChange');\n    const target = e.target;\n    const nameArray = target.name.split('.');\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    let inputData = {};\n\n    // 末尾から（深い階層から）再帰的にオブジェクトを作っていく\n    const generateDataObject = (nameArray, value, child) => {\n      const key = nameArray.pop();\n      inputData = {[key]: child || value};\n      if (nameArray.length) generateDataObject(nameArray, value, inputData);\n    };\n\n    generateDataObject(nameArray, value);\n    setDataToStorage(inputData);\n  }\n\n  const [isPtgRoster, setIsPtgRoster] = useState(true);\n  console.log('RENDERED!');\n\n  return (\n    <div css={tw`flex flex-col`}>\n      <div css={tw`flex items-center justify-between px-4 py-2 border-b border-black`}>\n        <h1 css={tw`m-0 text-sm`}>WH:AoS 「栄光への道」ロスタービルダー</h1>\n        <small>Ver {version}</small>\n      </div>\n      <div tw=\"mt-2 flex space-x-8 justify-center\">\n        <div tw=\"px-4 py-1 border border-yellow-400 bg-yellow-300 text-sm cursor-pointer\" onClick={load}>LOAD</div>\n        <div tw=\"px-4 py-1 border border-yellow-400 bg-yellow-300 text-sm cursor-pointer\" onClick={save}>SAVE</div>\n        {/* <div tw=\"px-2 border border-gray-400 bg-gray-300 text-sm\" onClick={() => console.log(ptg)}>CONSOLE</div> */}\n      </div>\n\n      <Tab isPtgRoster={isPtgRoster} setIsPtgRoster={setIsPtgRoster} />\n\n      <main>\n        <PtgContext.Provider value={ptg}>\n        <div css={isPtgRoster ? tw`block` : tw`hidden`}>\n          <Section>\n            <TextField label=\"プレイヤー名\" name=\"playerName\" value={ptg.playerName} onUpdate={handleInputChange} />\n            <TextField label=\"アーミー名\" name=\"armyName\" value={ptg.armyName} onUpdate={handleInputChange} />\n            <TextField label=\"陣営\" name=\"faction\" value={ptg.faction} onUpdate={handleInputChange} />\n            <TextField label=\"派閥\" name=\"subfaction\" value={ptg.subfaction} onUpdate={handleInputChange} />\n            <TextField label=\"出身領域\" name=\"realmOfOrigin\" value={ptg.realmOfOrigin} onUpdate={handleInputChange} />\n            <SelectField label=\"初期兵力\" name=\"startingSize\" value={ptg.startingSize} options={[\n              'ヴァンガード (600pt)', 'ウォーバンド (1000pt)', 'ブリゲイド (2000pt)', 'レギオン (2500pt)'\n            ]} onUpdate={handleInputChange} />\n          </Section>\n\n          <Section label=\"クエストログ\">\n            <TextField label=\"現行クエスト\" name=\"questLog.current\" value={ptg.questLog.current} onUpdate={handleInputChange} />\n            <TextField label=\"クエスト報酬\" name=\"questLog.reward\" value={ptg.questLog.reward} onUpdate={handleInputChange} />\n            <TextareaField label=\"クエスト進展\" name=\"questLog.progress\" value={ptg.questLog.progress} onUpdate={handleInputChange} />\n          </Section>\n          \n          <Section label=\"栄光ポイント\">\n            <NumberField label=\"栄光ポイント\" min=\"0\" name=\"gloryPoints\" value={ptg.gloryPoints} onUpdate={handleInputChange} />\n          </Section>\n          \n          <Section label=\"城\">\n            <TextField label=\"名前\" name=\"stronghold.name\" value={ptg.stronghold.name} onUpdate={handleInputChange} />\n            <NumberField label=\"兵舎\" min=\"0\" name=\"stronghold.barracks\" value={ptg.stronghold.barracks} onUpdate={handleInputChange} />\n            <div tw=\"flex\">\n              <div tw=\"w-1/2\"><CheckboxField label=\"城塞\" name=\"stronghold.hasImposing\" checked={ptg.stronghold.hasImposing} onUpdate={handleInputChange} /></div>\n              <div tw=\"w-1/2\"><CheckboxField label=\"大城塞\" name=\"stronghold.hasMighty\" checked={ptg.stronghold.hasMighty} onUpdate={handleInputChange} /></div>\n            </div>\n          </Section>\n          \n          <Section label=\"達成事項\">\n            {/* TODO: 見出し幅を長くする */}\n            <NumberField label=\"バトル回数\" min=\"0\" name=\"archivements.battleFought\" value={ptg.archivements.battleFought} onUpdate={handleInputChange} />\n            <NumberField label=\"勝利数\" min=\"0\" name=\"archivements.victoriesWon\" value={ptg.archivements.victoriesWon} onUpdate={handleInputChange} />\n            <NumberField label=\"達成クエスト\" min=\"0\" name=\"archivements.questsCompleted\" value={ptg.archivements.questsCompleted} onUpdate={handleInputChange} />\n            <NumberField label=\"敵ヒーロー撃破数\" min=\"0\" name=\"archivements.enemyHeroesSlain\" value={ptg.archivements.enemyHeroesSlain} onUpdate={handleInputChange} />\n          </Section>\n          \n          <Section label=\"宝物殿\">\n            <FieldsetTitle dark>ボーナス神器</FieldsetTitle>\n            { [...Array(6)].map((_, i) => <TextField label={i + 1} name={`theVault.artefact${i + 1}`} value={ptg.theVault[`artefact${i + 1}`]} onUpdate={handleInputChange} />)}\n            <FieldsetTitle dark>ボーナス呪文</FieldsetTitle>\n            { [...Array(6)].map((_, i) => <TextField label={i + 1} name={`theVault.spell${i + 1}`} value={ptg.theVault[`spell${i + 1}`]} onUpdate={handleInputChange} />)}\n            <FieldsetTitle dark>ボーナス奇蹟</FieldsetTitle>\n            { [...Array(6)].map((_, i) => <TextField label={i + 1} name={`theVault.prayer${i + 1}`} value={ptg.theVault[`prayer${i + 1}`]} onUpdate={handleInputChange} />)}\n            <FieldsetTitle dark>ボーナス固有強化</FieldsetTitle>\n            { [...Array(6)].map((_, i) => <TextField label={i + 1} name={`theVault.uniqueEnhancement${i + 1}`} value={ptg.theVault[`uniqueEnhancement${i + 1}`]} onUpdate={handleInputChange} />)}\n            <FieldsetTitle dark>永久呪文 / 顕現</FieldsetTitle>\n            { [...Array(3)].map((_, i) => <TextField label={i + 1} name={`theVault.endlessSpell${i + 1}`} value={ptg.theVault[`endlessSpell${i + 1}`]} onUpdate={handleInputChange} />)}\n            <FieldsetTitle dark>偉業</FieldsetTitle>\n            <TextField label=\"1\" name=\"theVault.triumph\" value={ptg.theVault.triumph} onUpdate={handleInputChange} />\n            <FieldsetTitle dark>バタリオン</FieldsetTitle>\n            { [...Array(6)].map((_, i) => <TextField label={i + 1} name={`theVault.battalion${i + 1}`} value={ptg.theVault[`battalion${i + 1}`]} onUpdate={handleInputChange} />)}\n          </Section>\n\n          <Section label=\"領地\">\n            <Territories label=\"城\" category=\"stronghold\" onUpdate={handleInputChange} />\n            <Territories label=\"城塞\" category=\"imposing\" onUpdate={handleInputChange} />\n            <Territories label=\"大城塞\" category=\"mighty\" onUpdate={handleInputChange} />\n          </Section>\n        </div>\n\n        <div css={isPtgRoster ? tw`hidden` : tw`block`}>\n          <Section label=\"ウォーロード\">\n            <TextField label=\"ファイター名\" name=\"warlord.name\" value={ptg.warlord.name} onUpdate={handleInputChange}  />\n            <TextField label=\"ウォースクロール\" name=\"warlord.warscroll\" value={ptg.warlord.warscroll} onUpdate={handleInputChange}  />\n            <TextField label=\"指揮特性\" name=\"warlord.commandTrait\" value={ptg.warlord.commandTrait} onUpdate={handleInputChange}  />\n            <TextareaField label=\"コア強化 / 備考\" name=\"warlord.coreEnhancements\" value={ptg.warlord.coreEnhancements} onUpdate={handleInputChange}  />\n            <TextField label=\"負傷\" name=\"warlord.injury\" value={ptg.warlord.injury} onUpdate={handleInputChange}  />\n            <div tw=\"flex\">\n              <div tw=\"flex border-b w-1/2\">\n                <Label tw=\"w-2/3\">名声値</Label>\n                <div css={pointsBodyStyles}>\n                  <input type=\"number\" min=\"0\" step=\"5\" css={pointsInputStyles} name=\"warlord.renownPoints\" value={ptg.warlord.renownPoints} onChange={handleInputChange} />\n                </div>\n              </div>\n              <div tw=\"flex border-b w-1/2\">\n                <Label tw=\"w-2/3\">ポイント</Label>\n                <div css={pointsBodyStyles}>\n                  <input type=\"number\" min=\"0\" step=\"5\" css={pointsInputStyles} name=\"warlord.points\" value={ptg.warlord.points} onChange={handleInputChange} />\n                </div>\n              </div>\n            </div>\n          </Section>\n\n          <Section label=\"ヒーロー\">\n            <HeroUnit id=\"1\" onUpdate={handleInputChange} />\n            <HeroUnit id=\"2\" onUpdate={handleInputChange} dark />\n            <HeroUnit id=\"3\" onUpdate={handleInputChange} />\n          </Section>\n\n          <Section label=\"その他のユニット\">\n            <OtherUnit id=\"1\" onUpdate={handleInputChange} />\n            <OtherUnit id=\"2\" onUpdate={handleInputChange} dark />\n            <OtherUnit id=\"3\" onUpdate={handleInputChange} />\n            <OtherUnit id=\"4\" onUpdate={handleInputChange} dark />\n            <OtherUnit id=\"5\" onUpdate={handleInputChange} />\n            <OtherUnit id=\"6\" onUpdate={handleInputChange} dark />\n            <OtherUnit id=\"7\" onUpdate={handleInputChange} />\n            <OtherUnit id=\"8\" onUpdate={handleInputChange} dark />\n            <OtherUnit id=\"9\" onUpdate={handleInputChange} />\n            <OtherUnit id=\"10\" onUpdate={handleInputChange} dark />\n            <OtherUnit id=\"11\" onUpdate={handleInputChange} />\n            <OtherUnit id=\"12\" onUpdate={handleInputChange} dark />\n          </Section>\n\n          <Section label=\"戦闘序列上限\">\n            <NumberField label=\"ユニット合計\" min=\"6\" value=\"6\" name=\"orderOfBattleLimits.totalUnits\" value={ptg.orderOfBattleLimits.totalUnits} onUpdate={handleInputChange} />\n            <NumberField label=\"ヒーロー\" min=\"3\" value=\"3\" name=\"orderOfBattleLimits.heroes\" value={ptg.orderOfBattleLimits.heroes} onUpdate={handleInputChange} />\n            <NumberField label=\"モンスター\" min=\"1\" value=\"1\" name=\"orderOfBattleLimits.monsters\" value={ptg.orderOfBattleLimits.monsters} onUpdate={handleInputChange} />\n            <NumberField label=\"ウォーマシン\" min=\"1\" value=\"1\" name=\"orderOfBattleLimits.warMachines\" value={ptg.orderOfBattleLimits.warMachines} onUpdate={handleInputChange} />\n            <NumberField label=\"ウィザード\" min=\"1\" value=\"1\" name=\"orderOfBattleLimits.wizards\" value={ptg.orderOfBattleLimits.wizards} onUpdate={handleInputChange} />\n            <NumberField label=\"プリースト\" min=\"1\" value=\"1\" name=\"orderOfBattleLimits.priests\" value={ptg.orderOfBattleLimits.priests} onUpdate={handleInputChange} />\n            <NumberField label=\"増強ユニット\" min=\"1\" value=\"1\" name=\"orderOfBattleLimits.reinforcedUnits\" value={ptg.orderOfBattleLimits.reinforcedUnits} onUpdate={handleInputChange} />\n            <NumberField label=\"同盟\" min=\"1\" value=\"1\" name=\"orderOfBattleLimits.allies\" value={ptg.orderOfBattleLimits.allies} onUpdate={handleInputChange} />\n          </Section>\n        </div>\n        </PtgContext.Provider>\n      </main>\n    </div>\n  )\n}\n\nexport default PathToGloryRosterBuilder\n\nconst pointsBodyStyles = css`\n  ${tw`w-1/3 flex items-center justify-center bg-white`}\n`;\n\nconst pointsInputStyles = css`\n  ${tw`px-1 w-full h-full text-xs`}\n`;"],"sourceRoot":""}