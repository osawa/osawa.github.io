{"version":3,"file":"component---src-templates-blog-post-js-20ec690e14f20228debe.js","mappings":"yKA2DA,IAhDY,WAAO,IAAD,IACVA,GAAOC,EAAAA,EAAAA,gBAAe,cAiBtBC,EAAM,UAAGF,EAAKG,KAAKC,oBAAb,aAAG,EAAwBF,OACjCG,EAAM,UAAGL,EAAKG,KAAKC,oBAAb,aAAG,EAAwBC,OAEvC,OACE,eAAKC,UAAU,QACb,QAAC,EAAAC,EAAD,CACED,UAAU,aACVE,OAAO,QACPC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,IAAI,4BACJC,MAAO,GACPC,OAAQ,GACRC,QAAS,GACTC,IAAI,kBARN,uBAUCZ,MAAAA,OAAA,EAAAA,EAAQa,QACP,gCACa,sBAASb,EAAOa,MAD7B,KAC6Cb,MAAAA,OAAA,EAAAA,EAAQc,UAAW,KADhE,KAGE,mBAHF,OAKE,aAAGC,KAAI,yBAAyBZ,MAAAA,OAAA,EAAAA,EAAQa,UAAR,KAAhC,IACIb,MAAAA,OADJ,EACIA,EAAQa,a,ixBCatB,UAxDyB,SAAC,GAAwB,IAAD,EAArBlB,EAAqB,EAArBA,KAAMmB,EAAe,EAAfA,SAC1BC,EAAOpB,EAAKqB,eACZC,GAAY,UAAAtB,EAAKG,KAAKC,oBAAV,eAAwBmB,QAAxB,QACVC,EAAmBxB,EAAnBwB,SAAUC,EAASzB,EAATyB,KAElB,OACE,QAAC,IAAD,CAAQN,SAAUA,EAAUI,MAAOD,IACjC,QAAC,IAAD,CACEC,MAAOH,EAAKM,YAAYH,MACxBI,YAAaP,EAAKM,YAAYC,aAAeP,EAAKQ,WAEpD,mBACEtB,UAAU,YACVuB,WAAS,EACTC,SAAS,8BAET,0BACE,oBAAkBC,SAAS,YAAYX,EAAKM,YAAYH,QACxD,mCACeH,EAAKM,YAAYM,KAC5BZ,EAAKM,YAAYO,cACjB,uCAA8Bb,EAAKM,YAAYO,gBAIrD,mBACEC,wBAAyB,CAAEC,OAAQf,EAAKgB,MACxCL,SAAS,iBAEX,oBACA,uBACE,QAAC,IAAD,SAGJ,eAAKzB,UAAU,kBACb,sBACE,qBACGkB,IAAaA,EAASE,YAAYW,QACjC,QAAC,EAAAC,KAAD,CAAMC,GAAIf,EAASgB,OAAOC,KAAMC,IAAI,QAApC,KACKlB,EAASE,YAAYH,SAI9B,qBACGE,IAASA,EAAKC,YAAYW,QACzB,QAAC,EAAAC,KAAD,CAAMC,GAAId,EAAKe,OAAOC,KAAMC,IAAI,QAC7BjB,EAAKC,YAAYH,MADpB,Y","sources":["webpack://gatsby-starter-blog/./src/components/bio.js","webpack://gatsby-starter-blog/./src/templates/blog-post.js"],"sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n  const social = data.site.siteMetadata?.social\n\n  return (\n    <div className=\"bio\">\n      <StaticImage\n        className=\"bio-avatar\"\n        layout=\"fixed\"\n        formats={[\"AUTO\", \"WEBP\", \"AVIF\"]}\n        src=\"../images/profile-pic.jpg\"\n        width={50}\n        height={50}\n        quality={95}\n        alt=\"Profile picture\"\n      />\n      {author?.name && (\n        <p>\n          Written by <strong>{author.name}</strong> {author?.summary || null}\n          {` `}\n          <br />\n          tw: \n          <a href={`https://twitter.com/${social?.twitter || ``}`}>\n            @{social?.twitter}\n          </a>\n        </p>\n      )}\n    </div>\n  )\n}\n\nexport default Bio\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport tw, { css } from 'twin.macro'\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst BlogPostTemplate = ({ data, location }) => {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const { previous, next } = data\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header tw=\"mb-10 pb-10 border-b border-gray-500\">\n          <h1 tw=\"m-0 mb-4\" itemProp=\"headline\">{post.frontmatter.title}</h1>\n          <p tw=\"m-0 text-sm\">\n            created at: {post.frontmatter.date}\n            { post.frontmatter.modified_at && (\n              <span tw=\"ml-8\">modified at: {post.frontmatter.modified_at}</span>\n            ) }\n          </p>\n        </header>\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n        <hr />\n        <footer>\n          <Bio />\n        </footer>\n      </article>\n      <nav className=\"blog-post-nav\">\n        <ul tw=\"flex flex-wrap justify-between list-none p-0 md:flex-nowrap\">\n          <li tw=\"md:w-1/2 pr-1\">\n            {previous && !previous.frontmatter.draft && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li tw=\"md:w-1/2 pl-1\">\n            {next && !next.frontmatter.draft && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"YYYY-MM-DD\")\n        description\n        modified_at(formatString: \"YYYY-MM-DD\")\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n        draft\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n        draft\n      }\n    }\n  }\n`\n"],"names":["data","useStaticQuery","author","site","siteMetadata","social","className","S","layout","formats","src","width","height","quality","alt","name","summary","href","twitter","location","post","markdownRemark","siteTitle","title","previous","next","frontmatter","description","excerpt","itemScope","itemType","itemProp","date","modified_at","dangerouslySetInnerHTML","__html","html","draft","Link","to","fields","slug","rel"],"sourceRoot":""}