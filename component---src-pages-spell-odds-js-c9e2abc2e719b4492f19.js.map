{"version":3,"file":"component---src-pages-spell-odds-js-c9e2abc2e719b4492f19.js","mappings":"yKA2DA,IAhDY,WAAO,IAAD,IACVA,GAAOC,EAAAA,EAAAA,gBAAe,cAiBtBC,EAAM,UAAGF,EAAKG,KAAKC,oBAAb,aAAG,EAAwBF,OACjCG,EAAM,UAAGL,EAAKG,KAAKC,oBAAb,aAAG,EAAwBC,OAEvC,OACE,eAAKC,UAAU,QACb,QAAC,EAAAC,EAAD,CACED,UAAU,aACVE,OAAO,QACPC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,IAAI,4BACJC,MAAO,GACPC,OAAQ,GACRC,QAAS,GACTC,IAAI,kBARN,uBAUCZ,MAAAA,OAAA,EAAAA,EAAQa,QACP,gCACa,sBAASb,EAAOa,MAD7B,KAC6Cb,MAAAA,OAAA,EAAAA,EAAQc,UAAW,KADhE,KAGE,mBAHF,OAKE,aAAGC,KAAI,yBAAyBZ,MAAAA,OAAA,EAAAA,EAAQa,UAAR,KAAhC,IACIb,MAAAA,OADJ,EACIA,EAAQa,a,+QC9BtB,IAjBa,SAACC,GACZ,IAAMC,EAAOD,EAAMnB,KAAKqB,KAAI,SAACC,GAC3B,OACE,cAAIC,IAAKC,IAEP,QAAC,EAAAC,KAAD,CAAMC,GAAE,QAAUJ,GAASA,OAKjC,OACE,cAAIC,IAAG,GACJH,IAOP,IAAMI,EAAS,oR","sources":["webpack://gatsby-starter-blog/./src/components/bio.js","webpack://gatsby-starter-blog/./src/components/tags.js"],"sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n  const social = data.site.siteMetadata?.social\n\n  return (\n    <div className=\"bio\">\n      <StaticImage\n        className=\"bio-avatar\"\n        layout=\"fixed\"\n        formats={[\"AUTO\", \"WEBP\", \"AVIF\"]}\n        src=\"../images/profile-pic.jpg\"\n        width={50}\n        height={50}\n        quality={95}\n        alt=\"Profile picture\"\n      />\n      {author?.name && (\n        <p>\n          Written by <strong>{author.name}</strong> {author?.summary || null}\n          {` `}\n          <br />\n          tw: \n          <a href={`https://twitter.com/${social?.twitter || ``}`}>\n            @{social?.twitter}\n          </a>\n        </p>\n      )}\n    </div>\n  )\n}\n\nexport default Bio\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport tw, { css } from 'twin.macro'\n\nconst Tags = (props) => {\n  const tags = props.data.map((text) => {\n    return (\n      <li css={tagStyles}>\n        {/* NOTE: リンク先をtextで指定してていいのか……そもそもテキストをtag名として登録してるからいいのか */}\n        <Link to={`tags/${text}`}>{text}</Link>\n      </li>\n    );\n  });\n\n  return (\n    <ul css={tw`space-x-4 ml-0`}>\n      {tags}\n    </ul>\n  );\n}\n\nexport default Tags\n\nconst tagStyles = css`\n  ${tw`inline-block m-0 px-2 py-1 border rounded text-sm list-none`}\n  border-color: var(--color-primary);\n`;\n"],"names":["data","useStaticQuery","author","site","siteMetadata","social","className","S","layout","formats","src","width","height","quality","alt","name","summary","href","twitter","props","tags","map","text","css","tagStyles","Link","to"],"sourceRoot":""}