{"version":3,"file":"component---src-templates-tag-page-js-25678616033043de8236.js","mappings":"yKA2DA,IAhDY,WAAO,IAAD,IACVA,GAAOC,EAAAA,EAAAA,gBAAe,cAiBtBC,EAAM,UAAGF,EAAKG,KAAKC,oBAAb,aAAG,EAAwBF,OACjCG,EAAM,UAAGL,EAAKG,KAAKC,oBAAb,aAAG,EAAwBC,OAEvC,OACE,eAAKC,UAAU,QACb,QAAC,EAAAC,EAAD,CACED,UAAU,aACVE,OAAO,QACPC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,IAAI,4BACJC,MAAO,GACPC,OAAQ,GACRC,QAAS,GACTC,IAAI,kBARN,uBAUCZ,MAAAA,OAAA,EAAAA,EAAQa,QACP,gCACa,sBAASb,EAAOa,MAD7B,KAC6Cb,MAAAA,OAAA,EAAAA,EAAQc,UAAW,KADhE,KAGE,mBAHF,OAKE,aAAGC,KAAI,yBAAyBZ,MAAAA,OAAA,EAAAA,EAAQa,UAAR,KAAhC,IACIb,MAAAA,OADJ,EACIA,EAAQa,a,0FCMtB,UAlDwB,SAAC,GAAqC,IAAD,EAAlClB,EAAkC,EAAlCA,KAAMmB,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YACnCC,GAAY,UAAArB,EAAKG,KAAKC,oBAAV,eAAwBkB,QAAxB,QACZC,EAAUH,EAAYI,KACtBC,EAAQzB,EAAK0B,kBAAkBC,MAErC,OACE,QAAC,IAAD,CAAQR,SAAUA,EAAUG,MAAOD,IACjC,QAAC,IAAD,CACEC,MAAK,QAAUC,EACfK,YAAW,QAAUL,EACrBM,SAAO,IAJX,QAMWN,GACT,cAAIO,MAAO,CAAEC,UAAU,SACpBC,QAAQC,IAAIR,GACZA,EAAMS,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACNb,EAAQa,EAAKC,YAAYd,OAASa,EAAKE,OAAOb,KACpD,OACE,cAAIc,IAAKH,EAAKE,OAAOb,OACnB,mBACElB,UAAU,iBACViC,WAAS,EACTC,SAAS,8BAET,uBACE,mBACE,QAAC,EAAAC,KAAD,CAAMC,GAAIP,EAAKE,OAAOb,OACpB,gBAAMmB,SAAS,YAAYrB,MAG/B,qBAAQa,EAAKC,YAAYQ,QAE3B,wBACE,aACEC,wBAAyB,CACvBC,OAAQX,EAAKC,YAAYR,aAAeO,EAAKY,SAE/CJ,SAAS,wBAQvB,QAAC,EAAAF,KAAD,CAAMC,GAAG,KAAT,Y","sources":["webpack://gatsby-starter-blog/./src/components/bio.js","webpack://gatsby-starter-blog/./src/templates/tag-page.js"],"sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n  const social = data.site.siteMetadata?.social\n\n  return (\n    <div className=\"bio\">\n      <StaticImage\n        className=\"bio-avatar\"\n        layout=\"fixed\"\n        formats={[\"AUTO\", \"WEBP\", \"AVIF\"]}\n        src=\"../images/profile-pic.jpg\"\n        width={50}\n        height={50}\n        quality={95}\n        alt=\"Profile picture\"\n      />\n      {author?.name && (\n        <p>\n          Written by <strong>{author.name}</strong> {author?.summary || null}\n          {` `}\n          <br />\n          tw: \n          <a href={`https://twitter.com/${social?.twitter || ``}`}>\n            @{social?.twitter}\n          </a>\n        </p>\n      )}\n    </div>\n  )\n}\n\nexport default Bio\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst TagPageTemplate = ({ data, location, pageContext }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const tagName = pageContext.slug\n  const posts = data.allMarkdownRemark.edges\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo\n        title={`tag: ${tagName}`}\n        description={`tag: ${tagName}`}\n        noindex\n      />\n      {`tag: ${tagName}`}\n      <ol style={{ listStyle: `none` }}>\n        {console.log(posts)}\n        {posts.map(({ node }) => {\n          const title = node.frontmatter.title || node.fields.slug\n          return (\n            <li key={node.fields.slug}>\n              <article\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <h2>\n                    <Link to={node.fields.slug}>\n                      <span itemProp=\"headline\">{title}</span>\n                    </Link>\n                  </h2>\n                  <small>{node.frontmatter.date}</small>\n                </header>\n                <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: node.frontmatter.description || node.excerpt,\n                    }}\n                    itemProp=\"description\"\n                  />\n                </section>\n              </article>\n            </li>\n          )\n        })}\n      </ol>\n      <Link to='/'>‚Üê top</Link>\n    </Layout>\n  )\n}\n\nexport default TagPageTemplate\n\nexport const pageQuery = graphql`\n  query($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    allMarkdownRemark(\n      filter: { frontmatter: { tags: { in: [$slug] } } }\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: 1000\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"YYYY-MM-DD\")\n            title\n            description\n            tags\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["data","useStaticQuery","author","site","siteMetadata","social","className","S","layout","formats","src","width","height","quality","alt","name","summary","href","twitter","location","pageContext","siteTitle","title","tagName","slug","posts","allMarkdownRemark","edges","description","noindex","style","listStyle","console","log","map","node","frontmatter","fields","key","itemScope","itemType","Link","to","itemProp","date","dangerouslySetInnerHTML","__html","excerpt"],"sourceRoot":""}